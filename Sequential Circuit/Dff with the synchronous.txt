module top_module (
    input clk,
    input resetn,          // synchronous active-low reset
    input [1:0] byteena,   // byte enables
    input [15:0] d,
    output reg [15:0] q
);

    always @(posedge clk) begin
        if (!resetn) begin
            q <= 16'b0;                     // reset clears all 16 FFs
        end else begin
            if (byteena[0]) q[7:0]  <= d[7:0];   // update lower byte if enabled
            if (byteena[1]) q[15:8] <= d[15:8];  // update upper byte if enabled
        end
    end

endmodule
