module top_module (
    input clk,
    input a,
    input b,
    output wire out_assign,
    output reg out_always_comb,
    output reg out_always_ff
);

    // Method 1: Continuous assignment
    assign out_assign = a ^ b;

    // Method 2: Combinational always block
    always @(*) begin
        out_always_comb = a ^ b;   // Blocking assignment
    end

    // Method 3: Sequential always block (flip-flop)
    always @(posedge clk) begin
        out_always_ff <= a ^ b;   // Non-blocking assignment
    end

endmodule
